#!/bin/bash
#SBATCH --partition=kamiak	### Partition
#SBATCH --job-name=samtools     ### Job Name
#SBATCH --output=samtools.out	### File in which to store job output
#SBATCH --error=samtools.err        ### File in which to store job error messages
#SBATCH --time=7-00:00:00	### Wall clock time limit in Days-HH:MM:SS
#SBATCH --array=1-24:1                  ### Submit separate jobs for each sample in the array
#SBATCH --nodes=1               ### Node count required for the job
#SBATCH --ntasks-per-node=1     ### Number of tasks to be launched per Node


####I ran this script from inside of my 01_mapped-SAM-files directory, it should work from the main directory as well, but if it doesn't you can move it into your sam directory
##the unaccompanied '-' in the input options for the programs in this pipeline tells a program to take the output file from the previous program as the input to be used (also referred to as the standard input [stdin])

###the awk string is removing soft-clipping from the aligned reads;
#soft-clipping "essentially means that portions of the read that do not match well to the reference genome on either side of the read are ignored for the alignment";
#so if the middle section of the read maps well, but the ends don't map, the entire read will be mapped in spite of the ends and these non-aligning areas of the read just carry a small penalty to the alignment score
###samtools fixmate ensures that Paired End reads contain the correct information about the mate read (paired read), then pipes the resulting ouput file to the next program using the ( - ) option
###samtools view converts the alignment file (-) from sam format to bam format (-b) with a header (-h) and pipes the uncompressed (-u) bam file to the next program (samtools sort)
###samtools sort is sorting the reads in the bam file generated by samtools view (-) by their position in the genome (now that they're aligned; i.e. Coordinated sorted) because they should have been sorted by read name previously


SampleName=$(sed -n ''$SLURM_ARRAY_TASK_ID'p' /data/kelley/projects/tarcreek/data/mapping/Xmac_bwa_subsamples_only/01_mapped_sam_files/02_sam_paths_subsamples.txt | awk '{print $1}')
SamplePath=$(sed -n ''$SLURM_ARRAY_TASK_ID'p' /data/kelley/projects/tarcreek/data/mapping/Xmac_bwa_subsamples_only/01_mapped_sam_files/02_sam_paths_subsamples.txt | awk '{print $2}')

                echo $SampleName
        output=/data/kelley/projects/tarcreek/data/mapping/Xmac_bwa_subsamples_only/02_mapped_bam_files/$SampleName

samtools view -h $SamplePath | awk 'BEGIN {OFS="\t"} {if (substr($1,1,1)=="@") {print;next}; split($6,C,/[0-9]*/); split($6,L,/[SMDIN]/); if (C[2]=="S") {$10=substr($10,L[1]+1); $11=substr($11,L[1]+1)}; if (C[length(C)]=="S") {L1=length($10)-L[length(L)-1]; $10=substr($10,1,L1); $11=substr($11,1,L1); }; gsub(/[0-9]*S/,"",$6); print}' > $SampleName.sc
samtools fixmate $SampleName.sc -O sam - | samtools view -h -b -u - | samtools sort - $output

                echo $output

cd /data/kelley/projects/tarcreek/data/mapping/Xmac_bwa_subsamples_only/02_mapped_bam_files
rm /data/kelley/projects/tarcreek/data/mapping/Xmac_bwa_subsamples_only/02_mapped_bam_files/$SampleName.sc
#The above just removes the temporary file we generated where soft-clipping was removed
#You will also need to delete the SAM files yourself after successfully creating your processed BAM files, SAM files are huuuuuge





